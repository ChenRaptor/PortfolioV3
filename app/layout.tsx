import './globals.css'
import { Inter } from 'next/font/google'
import { Session } from 'next-auth'
import { headers } from 'next/headers'
//import WrapperClient from '@/components/Wrapper/Client/main'
import AuthContext from '@/components/Provider/AuthContext'

async function getSession(cookie: string): Promise<Session> {
  const response = await fetch(`${process.env.LOCAL_AUTH_URL}/api/auth/session`, {
    headers: {
      cookie,
    },
  });

  const session = await response.json();

  //const shell = require('shelljs')
  //const path = 'projects'
  //shell.cd(path)
  //shell.exec('git clone https://github.com/atomicptr/dauntless-builder')

  return Object.keys(session).length > 0 ? session : null;
}

const inter = Inter({ subsets: ['latin'] })

export const metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}

const protectedSegment : { [key: string]: boolean } = {
    __PAGE__: false,
    dashboard: true,
}

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode,
}) {

  const session = await getSession(headers().get('cookie') ?? '');
  const segment : string = (children as any)?.props?.childProp.segment;
  const seg : any = (children as any)
  return (
    <html lang="en">
        <body className={inter.className}>
          <AuthContext session={session}>
            {children}
          </AuthContext>
        </body>
    </html>
  )
}