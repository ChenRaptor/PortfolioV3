import './globals.css'
import { Inter } from 'next/font/google'

import { Session } from 'next-auth'
import { headers } from 'next/headers'
import AuthContext from '../components/Provider/AuthContext';
import WrapperClient from '@/components/Wrapper/Client/main'
import ProtectedLayout from '@/components/Wrapper/ProtectedLayout/main';

async function getSession(cookie: string): Promise<Session> {
  const response = await fetch(`${process.env.LOCAL_AUTH_URL}/api/auth/session`, {
    headers: {
      cookie,
    },
  });

  const session = await response.json();

  return Object.keys(session).length > 0 ? session : null;
}


const inter = Inter({ subsets: ['latin'] })

export const metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}

const protectedSegment : { [key: string]: boolean } = {
    __PAGE__: false,
    dashboard: true,
}

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode,
}) {

  const session = await getSession(headers().get('cookie') ?? '');
  const segment = (children as any)?.props?.childProp.segment;

  return (
    <html lang="en">
        <body className={inter.className}>
            <AuthContext session={session}>
                {   
                    protectedSegment[segment] ? 
                    <ProtectedLayout><WrapperClient>{children}</WrapperClient></ProtectedLayout> :
                    <WrapperClient>{children}</WrapperClient>
                }
            </AuthContext>
        </body>
    </html>
  )
}